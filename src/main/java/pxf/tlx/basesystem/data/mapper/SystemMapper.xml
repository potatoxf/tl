<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pxf.tlx.basesystem.data.mapper.SystemMapper">
    <!--********************************* Dir *********************************-->

    <resultMap id="RM_Dir" type="pxf.tlx.basesystem.data.entity.SystemDir">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="driver" jdbcType="VARCHAR" property="driver"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="locked" jdbcType="BOOLEAN" property="locked"/>
        <result column="size" jdbcType="DOUBLE" property="size"/>
        <result column="notes" jdbcType="VARCHAR" property="notes"/>
        <result column="created_time" jdbcType="BIGINT" property="createdTime"/>
        <result column="updated_time" jdbcType="BIGINT" property="updatedTime"/>
    </resultMap>
    <sql id="Dir_Columns">
        id, driver, path, locked, size, notes, created_time, updated_time
    </sql>
    <select id="getDirById" parameterType="java.lang.Integer" resultMap="RM_Dir">
        select
        <include refid="Dir_Columns"/>
        from base_dir
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="removeDirById" parameterType="java.lang.Integer">
        delete
        from base_dir
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="addDir" parameterType="pxf.tlx.basesystem.data.entity.SystemDir">
        insert into base_dir (<include refid="Dir_Columns"/>)
        values (#{id,jdbcType=INTEGER}, #{driver,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{locked,jdbcType=BOOLEAN}, #{size,jdbcType=DOUBLE}, #{notes,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT})
    </insert>
    <insert id="addDirSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemDir">
        insert into base_dir
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="driver != null">
                driver,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="driver != null">
                #{driver,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=BOOLEAN},
            </if>
            <if test="size != null">
                #{size,jdbcType=DOUBLE},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="modifyDirById" parameterType="pxf.tlx.basesystem.data.entity.SystemDir">
        update base_dir
        set driver       = #{driver,jdbcType=VARCHAR},
            path         = #{path,jdbcType=VARCHAR},
            locked       = #{locked,jdbcType=BOOLEAN},
            size         = #{size,jdbcType=DOUBLE},
            notes        = #{notes,jdbcType=VARCHAR},
            created_time = #{createdTime,jdbcType=BIGINT},
            updated_time = #{updatedTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="modifyDirByIdSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemDir">
        update base_dir
        <set>
            <if test="driver != null">
                driver = #{driver,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=BOOLEAN},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=DOUBLE},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--********************************* File *********************************-->

    <resultMap id="RM_File" type="pxf.tlx.basesystem.data.entity.SystemFile">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="dir_id" jdbcType="INTEGER" property="dirId"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="designation" jdbcType="VARCHAR" property="designation"/>
        <result column="suffix" jdbcType="VARCHAR" property="suffix"/>
        <result column="size" jdbcType="DOUBLE" property="size"/>
        <result column="notes" jdbcType="VARCHAR" property="notes"/>
        <result column="created_time" jdbcType="BIGINT" property="createdTime"/>
        <result column="updated_time" jdbcType="BIGINT" property="updatedTime"/>
    </resultMap>
    <sql id="File_Columns">
        id, dir_id, path, designation, suffix, size, notes, created_time, updated_time
    </sql>
    <select id="getFileById" parameterType="java.lang.Integer" resultMap="RM_File">
        select
        <include refid="File_Columns"/>
        from base_file
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="removeFileById" parameterType="java.lang.Integer">
        delete
        from base_file
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="addFile" parameterType="pxf.tlx.basesystem.data.entity.SystemFile">
        insert into base_file (<include refid="File_Columns"/>)
        values (#{id,jdbcType=INTEGER}, #{dirId,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, #{designation,jdbcType=VARCHAR}, #{suffix,jdbcType=VARCHAR}, #{size,jdbcType=DOUBLE}, #{notes,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT})
    </insert>
    <insert id="addFileSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemFile">
        insert into base_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dirId != null">
                dir_id,
            </if>
            <if test="path != null">
                path,
            </if>
            <if test="designation != null">
                designation,
            </if>
            <if test="suffix != null">
                suffix,
            </if>
            <if test="size != null">
                size,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="dirId != null">
                #{dirId,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="designation != null">
                #{designation,jdbcType=VARCHAR},
            </if>
            <if test="suffix != null">
                #{suffix,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                #{size,jdbcType=DOUBLE},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="modifyFileById" parameterType="pxf.tlx.basesystem.data.entity.SystemFile">
        update base_file
        set dir_id       = #{dirId,jdbcType=INTEGER},
            path         = #{path,jdbcType=VARCHAR},
            designation  = #{designation,jdbcType=VARCHAR},
            suffix       = #{suffix,jdbcType=VARCHAR},
            size         = #{size,jdbcType=DOUBLE},
            notes        = #{notes,jdbcType=VARCHAR},
            created_time = #{createdTime,jdbcType=BIGINT},
            updated_time = #{updatedTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="modifyFileByIdSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemFile">
        update base_file
        <set>
            <if test="dirId != null">
                dir_id = #{dirId,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
            <if test="designation != null">
                designation = #{designation,jdbcType=VARCHAR},
            </if>
            <if test="suffix != null">
                suffix = #{suffix,jdbcType=VARCHAR},
            </if>
            <if test="size != null">
                size = #{size,jdbcType=DOUBLE},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--********************************* Enum *********************************-->

    <resultMap id="RM_Enum" type="pxf.tlx.basesystem.data.entity.SystemEnum">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="module" jdbcType="VARCHAR" property="module"/>
        <result column="catalog" jdbcType="VARCHAR" property="catalog"/>
        <result column="token" jdbcType="VARCHAR" property="token"/>
        <result column="designation" jdbcType="VARCHAR" property="designation"/>
        <result column="integer_value" jdbcType="INTEGER" property="integerValue"/>
        <result column="string_value" jdbcType="VARCHAR" property="stringValue"/>
        <result column="notes" jdbcType="VARCHAR" property="notes"/>
        <result column="ord" jdbcType="INTEGER" property="ord"/>
        <result column="created_time" jdbcType="BIGINT" property="createdTime"/>
        <result column="updated_time" jdbcType="BIGINT" property="updatedTime"/>
    </resultMap>
    <sql id="Enum_Columns">
        id, module, catalog, token, designation, integer_value, string_value, notes, ord, created_time, updated_time
    </sql>
    <select id="getEnumById" parameterType="java.lang.Integer" resultMap="RM_Enum">
        select
        <include refid="Enum_Columns"/>
        from base_enum
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="removeEnumById" parameterType="java.lang.Integer">
        delete
        from base_enum
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="addEnum" parameterType="pxf.tlx.basesystem.data.entity.SystemEnum">
        insert into base_enum (<include refid="Enum_Columns"/>)
        values (#{id,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, #{catalog,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{designation,jdbcType=VARCHAR}, #{integerValue,jdbcType=INTEGER}, #{stringValue,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR}, #{ord,jdbcType=INTEGER}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT})
    </insert>
    <insert id="addEnumSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemEnum">
        insert into base_enum
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="module != null">
                module,
            </if>
            <if test="catalog != null">
                catalog,
            </if>
            <if test="token != null">
                token,
            </if>
            <if test="designation != null">
                designation,
            </if>
            <if test="integerValue != null">
                integer_value,
            </if>
            <if test="stringValue != null">
                string_value,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="ord != null">
                ord,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="module != null">
                #{module,jdbcType=VARCHAR},
            </if>
            <if test="catalog != null">
                #{catalog,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                #{token,jdbcType=VARCHAR},
            </if>
            <if test="designation != null">
                #{designation,jdbcType=VARCHAR},
            </if>
            <if test="integerValue != null">
                #{integerValue,jdbcType=INTEGER},
            </if>
            <if test="stringValue != null">
                #{stringValue,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="ord != null">
                #{ord,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="modifyEnumById" parameterType="pxf.tlx.basesystem.data.entity.SystemEnum">
        update base_enum
        set module        = #{module,jdbcType=VARCHAR},
            catalog       = #{catalog,jdbcType=VARCHAR},
            token         = #{token,jdbcType=VARCHAR},
            designation   = #{designation,jdbcType=VARCHAR},
            integer_value = #{integerValue,jdbcType=INTEGER},
            string_value  = #{stringValue,jdbcType=VARCHAR},
            notes         = #{notes,jdbcType=VARCHAR},
            ord           = #{ord,jdbcType=INTEGER},
            created_time  = #{createdTime,jdbcType=BIGINT},
            updated_time  = #{updatedTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="modifyEnumByIdSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemEnum">
        update base_enum
        <set>
            <if test="module != null">
                module = #{module,jdbcType=VARCHAR},
            </if>
            <if test="catalog != null">
                catalog = #{catalog,jdbcType=VARCHAR},
            </if>
            <if test="token != null">
                token = #{token,jdbcType=VARCHAR},
            </if>
            <if test="designation != null">
                designation = #{designation,jdbcType=VARCHAR},
            </if>
            <if test="integerValue != null">
                integer_value = #{integerValue,jdbcType=INTEGER},
            </if>
            <if test="stringValue != null">
                string_value = #{stringValue,jdbcType=VARCHAR},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="ord != null">
                ord = #{ord,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--********************************* Setting *********************************-->
    
    <resultMap id="RM_Setting" type="pxf.tlx.basesystem.data.entity.SystemSetting">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="module" jdbcType="VARCHAR" property="module"/>
        <result column="designation" jdbcType="VARCHAR" property="designation"/>
        <result column="value_data" jdbcType="VARCHAR" property="valueData"/>
        <result column="value_type" jdbcType="TINYINT" property="valueType"/>
        <result column="notes" jdbcType="VARCHAR" property="notes"/>
        <result column="created_time" jdbcType="BIGINT" property="createdTime"/>
        <result column="updated_time" jdbcType="BIGINT" property="updatedTime"/>
    </resultMap>
    <sql id="Setting_Columns">
        id, module, designation, value_data, value_type, notes, created_time, updated_time
    </sql>
    <select id="getSettingPropValue" resultType="java.lang.String">
        select value_data
        from base_setting
        where module = #{module,jdbcType=VARCHAR}
          and designation = #{designation,jdbcType=VARCHAR}
    </select>
    <select id="getSettingById" parameterType="java.lang.Integer" resultMap="RM_Setting">
        select
        <include refid="Setting_Columns"/>
        from base_setting
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="removeSettingById" parameterType="java.lang.Integer">
        delete
        from base_setting
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="addSetting" parameterType="pxf.tlx.basesystem.data.entity.SystemSetting">
        insert into base_setting (<include refid="Setting_Columns"/>)
        values (#{id,jdbcType=INTEGER}, #{module,jdbcType=VARCHAR}, #{designation,jdbcType=VARCHAR}, #{valueData,jdbcType=VARCHAR}, #{valueType,jdbcType=TINYINT}, #{notes,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT})
    </insert>
    <insert id="addSettingSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemSetting">
        insert into base_setting
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="module != null">
                module,
            </if>
            <if test="designation != null">
                designation,
            </if>
            <if test="valueData != null">
                value_data,
            </if>
            <if test="valueType != null">
                value_type,
            </if>
            <if test="notes != null">
                notes,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="module != null">
                #{module,jdbcType=VARCHAR},
            </if>
            <if test="designation != null">
                #{designation,jdbcType=VARCHAR},
            </if>
            <if test="valueData != null">
                #{valueData,jdbcType=VARCHAR},
            </if>
            <if test="valueType != null">
                #{valueType,jdbcType=TINYINT},
            </if>
            <if test="notes != null">
                #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                #{updatedTime,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="modifySettingById" parameterType="pxf.tlx.basesystem.data.entity.SystemSetting">
        update base_setting
        set module       = #{module,jdbcType=VARCHAR},
            designation  = #{designation,jdbcType=VARCHAR},
            value_data   = #{valueData,jdbcType=VARCHAR},
            value_type   = #{valueType,jdbcType=TINYINT},
            notes        = #{notes,jdbcType=VARCHAR},
            created_time = #{createdTime,jdbcType=BIGINT},
            updated_time = #{updatedTime,jdbcType=BIGINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="modifySettingByIdSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemSetting">
        update base_setting
        <set>
            <if test="module != null">
                module = #{module,jdbcType=VARCHAR},
            </if>
            <if test="designation != null">
                designation = #{designation,jdbcType=VARCHAR},
            </if>
            <if test="valueData != null">
                value_data = #{valueData,jdbcType=VARCHAR},
            </if>
            <if test="valueType != null">
                value_type = #{valueType,jdbcType=TINYINT},
            </if>
            <if test="notes != null">
                notes = #{notes,jdbcType=VARCHAR},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    
     <!--********************************* Setting *********************************-->

    <resultMap id="RM_Cors" type="pxf.tlx.basesystem.data.entity.SystemCors">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pattern" jdbcType="VARCHAR" property="pattern"/>
        <result column="origin" jdbcType="VARCHAR" property="origin"/>
        <result column="methods" jdbcType="VARCHAR" property="methods"/>
        <result column="headers" jdbcType="VARCHAR" property="headers"/>
        <result column="credentials" jdbcType="BOOLEAN" property="credentials"/>
        <result column="max_age" jdbcType="BIGINT" property="maxAge"/>
        <result column="created_time" jdbcType="BIGINT" property="createdTime"/>
        <result column="updated_time" jdbcType="BIGINT" property="updatedTime"/>
    </resultMap>
    <sql id="Cors_Columns">
        id, pattern, origin, methods, headers, credentials, max_age, created_time, updated_time
    </sql>

    <select id="getCorsList" resultMap="RM_Cors">
        select
        <include refid="Cors_Columns"/>
        from base_cors
    </select>
    <select id="getCorsById" parameterType="java.lang.Integer" resultMap="RM_Cors">
        select
        <include refid="Cors_Columns"/>
        from base_cors
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="removeCorsById" parameterType="java.lang.Integer">
        delete
        from base_cors
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="addCors" parameterType="pxf.tlx.basesystem.data.entity.SystemCors">
        insert into base_cors (<include refid="Cors_Columns"/>)
        values (#{id,jdbcType=INTEGER}, #{pattern,jdbcType=VARCHAR}, #{origin,jdbcType=VARCHAR}, #{methods,jdbcType=VARCHAR}, #{headers,jdbcType=VARCHAR}, #{credentials,jdbcType=BOOLEAN}, #{maxAge,jdbcType=INTEGER}, #{createdTime,jdbcType=BIGINT}, #{updatedTime,jdbcType=BIGINT})
    </insert>
    <update id="modifyCorsByIdSelective" parameterType="pxf.tlx.basesystem.data.entity.SystemCors">
        update base_cors
        <set>
            <if test="pattern != null">
                pattern = #{pattern,jdbcType=VARCHAR},
            </if>
            <if test="origin != null">
                origin = #{origin,jdbcType=VARCHAR},
            </if>
            <if test="methods != null">
                methods = #{methods,jdbcType=VARCHAR},
            </if>
            <if test="headers != null">
                headers = #{headers,jdbcType=VARCHAR},
            </if>
            <if test="credentials != null">
                credentials = #{credentials,jdbcType=BOOLEAN},
            </if>
            <if test="maxAge != null">
                max_age = #{maxAge,jdbcType=INTEGER},
            </if>
            <if test="createdTime != null">
                created_time = #{createdTime,jdbcType=BIGINT},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>